

# name: Deploy Now

# on:
#   - push
#   - workflow_dispatch

# jobs:
#   deploy-now:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Fetch project data
#         uses: ionos-deploy-now/retrieve-project-info-action@v1
#         id: project
#         with:
#           api-key: ${{ secrets.IONOS_API_KEY }}
#           project: ${{ secrets.IONOS_PROJECT_ID }}
#           service-host: api-eu.ionos.space

#       - name: checkout
#         if: ${{ steps.project.outputs.deployment-enabled == 'true' }}
#         uses: actions/checkout@v2
#         with:
#           submodules: 'recursive'

#       - name: Setup Node
#         if: ${{ steps.project.outputs.deployment-enabled == 'true' }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: v14.x

#       - name: Build Node assets
#         env:
#           CI: true
#           SITE_URL: ${{ steps.project.outputs.site-url }}
#         run: |
#           npm ci

#       - name: Deploy to IONOS
#         if: ${{ steps.project.outputs.deployment-enabled == 'true' }}
#         uses: ionos-deploy-now/deploy-to-ionos-action@v1
#         with:
#           project: ${{ secrets.IONOS_PROJECT_ID }}
#           branch-id: ${{ steps.project.outputs.branch-id }}
#           service-host: api-eu.ionos.space
#           api-key: ${{ secrets.IONOS_API_KEY }}
#           dist-folder: ./out

name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  Push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - uses: actions/heckout@v3
      - name: Staring Node.js ${{matrix.node-version}}
        uses: axtions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
      - name: install modules
        run: npm install
      - name: build project
        run: npm run build
      - name: run tests
        run: npm run test
      
